<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.ApiGongduOrderMapper">

    <resultMap type="com.platform.entity.GongDuOrderVo" id="cnngongduOrderMap">
        <result property="id" column="id"/>
        <result property="orderSn" column="order_sn"/>
        <result property="userId" column="user_id"/>
        <result property="learnTypeId" column="learn_type_id"/>
        <result property="orderStatus" column="order_status"/>
        <result property="payStatus" column="pay_status"/>
        <result property="actualPrice" column="actual_price"/>
        <result property="goodsPrice" column="goods_price"/>
        <result property="payId" column="pay_id"/>
        <result property="payTime" column="pay_time"/>
        <result property="addTime" column="add_time"/>
    </resultMap>

	<select id="queryObject" resultType="com.platform.entity.GongDuOrderVo">
		select
			`id`,
			`order_sn`,
			`user_id`,
			`learn_type_id`,
			`order_status`,
			`pay_status`,
			`actual_price`,
			`goods_price`,
			`pay_id`,
			`pay_time`,
			`add_time`
		from cnngongdu_order
		where order_sn = #{orderSn}
	</select>

	<select id="queryList" resultType="com.platform.entity.GongDuOrderVo">
		select
    		`id`,
    		`order_sn`,
    		`user_id`,
    		`learn_type_id`,
    		`order_status`,
    		`pay_status`,
    		`actual_price`,
    		`goods_price`,
    		`pay_id`,
    		`pay_time`,
    		`add_time`
		from cnngongdu_order
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from cnngongdu_order
		WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
	</select>
	 
	<insert id="save" parameterType="com.platform.entity.GongDuOrderVo" useGeneratedKeys="true" keyProperty="id">
		insert into cnngongdu_order(
			`order_sn`,
			`user_id`,
			`learn_type_id`,
			`order_status`,
			`pay_status`,
			`actual_price`,
			`goods_price`,
			`pay_id`,
			`pay_time`,
			`add_time`)
		values(
			#{orderSn},
			#{userId},
			#{learnTypeId},
			#{orderStatus},
			#{payStatus},
			#{actualPrice},
			#{goodsPrice},
			#{payId},
			#{payTime},
			now())
	</insert>
	 
	<update id="update" parameterType="com.platform.entity.GongDuOrderVo">
		update cnngongdu_order 
		<set>
			<if test="orderSn != null">`order_sn` = #{orderSn}, </if>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="userId != null">`learn_type_id` = #{learnTypeId}, </if>
			<if test="orderStatus != null">`order_status` = #{orderStatus}, </if>
			<if test="payStatus != null">`pay_status` = #{payStatus}, </if>
			<if test="actualPrice != null">`actual_price` = #{actualPrice}, </if>
			<if test="goodsPrice != null">`goods_price` = #{goodsPrice}, </if>
			<if test="payId != null">`pay_id` = #{payId}, </if>
			<if test="payTime != null">`pay_time` = #{payTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from cnngongdu_order where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from cnngongdu_order where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>