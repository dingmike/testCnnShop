<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.ApiUserLearnMapper">

    <resultMap type="com.platform.entity.UserLearnVo" id="cnnUserLearnMap">
        <result property="id" column="id"/>
        <result property="learnTypeId" column="learn_type_id"/>
        <result property="userid" column="userid"/>
        <result property="unlocks" column="unlocks"/>
        <result property="formId" column="formId"/>
        <result property="miss" column="miss"/>
        <result property="startStatus" column="start_status"/>
        <result property="setupTime" column="setup_time"/>
        <result property="addTime" column="add_time"/>
        <result property="updateTime" column="update_time"/>
		<result property="userName" column="username"/>
		<result property="avatar" column="avatar"/>
		<result property="nickname" column="nickname"/>
		<result property="learnType" column="learntype"/>
		<result property="genusdays" column="genusdays"/>
    </resultMap>

	<select id="queryObject" resultType="com.platform.entity.UserLearnVo">
	/*	select
			`id`,
			`learn_type_id`,
			`userid`,
			`unlocks`,
			`start_status`,
			`setup_time`,
			`add_time`,
			`update_time`
		from cnn_user_learn*/

		select o.*,u.username as username,u.nickname as nickname,u.avatar as avatar,l.learn_type as learntype from cnn_user_learn o
		left join nideshop_user u on o.userid = u.id
		left join cnn_learn_type l on o.learn_type_id = l.id

		where o.id = #{id}
	</select>

	<select id="queryObjectByUserId" resultType="com.platform.entity.UserLearnVo">
		select o.*,u.username as username,u.nickname as nickname,u.avatar as avatar,l.learn_type as learntype,l.genusdays as genusdays from cnn_user_learn o
		left join nideshop_user u on o.userid = u.id
		left join cnn_learn_type l on o.learn_type_id = l.id

		where o.userid = #{userId}
	</select>

	<select id="queryList" resultType="com.platform.entity.UserLearnVo">

		select o.*,u.username as username,u.nickname as nickname,u.avatar as avatar,l.learn_type as learntype from cnn_user_learn o
		left join nideshop_user u on o.userid = u.id
		left join cnn_learn_type l on o.learn_type_id = l.id
		<if test="learnTypeId != null and learnTypeId != ''">
			WHERE o.learn_type_id = #{learnTypeId}
		</if>
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
		<if test="limit == null">
			limit 8
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from cnn_user_learn
		WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
	</select>
	 
	<insert id="save" parameterType="com.platform.entity.UserLearnVo" useGeneratedKeys="true" keyProperty="id">
		insert into cnn_user_learn(
			`learn_type_id`,
			`userid`,
			`unlocks`,
			`formId`,
			`miss`,
			`start_status`,
			`setup_time`,
			`add_time`,
			`update_time`)
		values(
			#{learnTypeId},
			#{userid},
			#{unlocks},
			#{formId},
			#{miss},
			#{startStatus},
			#{setupTime},
			now(),
			now())
	</insert>
	<update id="updateUnlocks" parameterType="com.platform.entity.UserLearnVo">
		update cnn_user_learn set unlocks = unlocks + 1
		where
		<if test="totalUnlocks != null">
		  unlocks &lt; #{totalUnlocks}
		</if>
	</update>

	<update id="update" parameterType="com.platform.entity.UserLearnVo">
		update cnn_user_learn 
		<set>
			<if test="learnTypeId != null">`learn_type_id` = #{learnTypeId}, </if>
			<if test="userid != null">`userid` = #{userid}, </if>
			<if test="unlocks != null">`unlocks` = #{unlocks}, </if>
			<if test="formId != null">`formId` = #{formId}, </if>
			<if test="miss != null">`miss` = #{miss}, </if>
			<if test="startStatus != null">`start_status` = #{startStatus}, </if>
			<if test="setupTime != null">`setup_time` = #{setupTime}, </if>
			<if test="updateTime != null">`update_time` = now()</if>
		</set>
		where userid = #{userid}
	</update>
	
	<delete id="delete">
		delete from cnn_user_learn where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from cnn_user_learn where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>