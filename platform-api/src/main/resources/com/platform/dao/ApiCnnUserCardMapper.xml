<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.ApiCnnUserCardMapper">

    <resultMap type="com.platform.entity.CnnUserCardEntity" id="cnnUserCardMap">
        <result property="id" column="id"/>
        <result property="learnTypeId" column="learn_type_id"/>
        <result property="learnType" column="learnType"/>
        <result property="userid" column="userid"/>
        <result property="username" column="username"/>
        <result property="nickname" column="nickname"/>
        <result property="cardDay" column="card_day"/>
        <result property="day" column="day"/>
        <result property="month" column="month"/>
        <result property="year" column="year"/>
        <result property="reasonable" column="reasonable"/>
        <result property="cardTime" column="card_time"/>
        <result property="addTime" column="add_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

	<select id="queryObjectByOther" resultType="com.platform.entity.CnnUserCardVo">
		select
		ud.*,
		lt.learn_type as learnType,
		u.username as username,
		u.nickname as nickname
		from cnn_user_card ud
		left join nideshop_user u on ud.userid = u.id
		left join cnn_learn_type lt on ud.learn_type_id = lt.id
		where
		<if test="month != null and day != null and learnTypeId != null and userId != null and year != null">
			ud.month = #{month} and ud.learn_type_id = #{learnTypeId} and ud.day = #{day} and ud.userid = #{userId} and ud.year =#{year}
		</if>
	</select>
	<select id="queryUserCardByUseridAndType" resultType="com.platform.entity.CnnUserCardVo">
		select
		ud.id,
		ud.learn_type_id,
		ud.userid,
		ud.card_day,
		ud.day,
		ud.month,
		ud.year,
		ud.reasonable,
		ud.card_time,
		ud.add_time,
		ud.update_time,
		lt.learn_type as learnType,
		u.username as username,
		u.nickname as nickname
		from cnn_user_card ud
		left join nideshop_user u on ud.userid = u.id
		left join cnn_learn_type lt on ud.learn_type_id = lt.id
		WHERE
		<if test="userid != null and learnTypeId != ''">
			ud.userid = #{userid} and ud.learn_type_id = #{learnTypeId} and ud.reasonable = 1
		</if>
	</select>


	<select id="queryUserCardList" resultType="com.platform.entity.CnnUserCardVo">
		select
		ud.id,
		ud.learn_type_id,
		ud.userid,
		ud.card_day,
		ud.day,
		ud.month,
		ud.year,
		ud.reasonable,
		ud.card_time,
		ud.add_time,
		ud.update_time,
		lt.learn_type as learnType,
		u.username as username,
		u.nickname as nickname
		from cnn_user_card ud
		left join nideshop_user u on ud.userid = u.id
		left join cnn_learn_type lt on ud.learn_type_id = lt.id
		WHERE
		<if test="userid != null and learnTypeId != ''">
			ud.userid = #{userid} and ud.learn_type_id = #{learnTypeId}
		</if>
	</select>


	<select id="queryList" resultType="com.platform.entity.CnnUserCardVo">
		select
		ud.id,
		ud.learn_type_id,
		ud.userid,
		ud.card_day,
		ud.day,
		ud.month,
		ud.year,
		ud.reasonable,
		ud.card_time,
		ud.add_time,
		ud.update_time,
		lt.learn_type as learnType,
		u.username as username,
		u.nickname as nickname
		from cnn_user_card ud
		left join nideshop_user u on ud.userid = u.id
		left join cnn_learn_type lt on ud.learn_type_id = lt.id
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from cnn_user_card
		WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
	</select>
	 
	<insert id="save" parameterType="com.platform.entity.CnnUserCardVo" useGeneratedKeys="true" keyProperty="id">
		insert into cnn_user_card(
			`learn_type_id`,
			`userid`,
			`card_day`,
			`day`,
			`month`,
			`year`,
			`reasonable`,
			`card_time`,
			`add_time`,
			`update_time`)
		values(
			#{learnTypeId},
			#{userid},
			#{cardDay},
			#{day},
			#{month},
			#{year},
			#{reasonable},
			now(),
			now(),
			now())
	</insert>
	 
	<update id="update" parameterType="com.platform.entity.CnnUserCardVo">
		update cnn_user_card 
		<set>
			<if test="learnTypeId != null">`learn_type_id` = #{learnTypeId}, </if>
			<if test="cardDay != null">`card_day` = #{cardDay}, </if>
			<if test="day != null">`day` = #{day}, </if>
			<if test="month != null">`month` = #{month}, </if>
			<if test="year != null">`year` = #{year}, </if>
			<if test="reasonable != null">`reasonable` = #{reasonable}, </if>
			<if test="cardTime != null">`card_time` = #{cardTime}, </if>
			<if test="updateTime != null">`update_time` = now()</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from cnn_user_card where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from cnn_user_card where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>