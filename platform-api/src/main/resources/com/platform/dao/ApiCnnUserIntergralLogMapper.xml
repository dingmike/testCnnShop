<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.ApiCnnUserIntergralLogMapper">

	<resultMap type="com.platform.entity.UserIntergralLogVo" id="cnnIntergralLogMap">
		<result property="id" column="id"/>
		<result property="learnTypeId" column="learn_type_id"/>
		<result property="userid" column="userid"/>
		<result property="username" column="username"/>
		<result property="nickname" column="nickname"/>
		<result property="points" column="points"/>
		<result property="nowPoints" column="nowPoints"/>
		<result property="cardId" column="card_id"/>
		<result property="plusMins" column="plus_mins"/>
		<result property="memo" column="memo"/>
		<result property="addTime" column="add_time"/>
		<result property="updateTime" column="update_time"/>
	</resultMap>

	<select id="queryObject" resultType="com.platform.entity.UserIntergralLogVo">
		select
		`id`,
		`learn_type_id`,
		`userid`,
		`username`,
		`nickname`,
		`points`,
		`nowPoints`,
		`card_id`,
		`plus_mins`,
		`memo`,
		`add_time`,
		`update_time`
		from cnn_intergral_log
		where id = #{id}
	</select>

	<select id="queryList" resultType="com.platform.entity.UserIntergralLogVo">
		select
		`id`,
		`learn_type_id`,
		`userid`,
		`username`,
		`nickname`,
		`points`,
		`nowPoints`,
		`card_id`,
		`plus_mins`,
		`memo`,
		`add_time`,
		`update_time`
		from cnn_intergral_log
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="queryTotal" resultType="int">
		select count(*) from cnn_intergral_log
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
	</select>

	<insert id="save" parameterType="com.platform.entity.UserIntergralLogVo" useGeneratedKeys="true" keyProperty="id">
		insert into cnn_intergral_log(
		`learn_type_id`,
		`userid`,
		`username`,
		`nickname`,
		`points`,
		`nowPoints`,
		`card_id`,
		`plus_mins`,
		`memo`,
		`add_time`,
		`update_time`)
		values(
		#{learnTypeId},
		#{userid},
		#{username},
		#{nickname},
		#{points},
		#{nowPoints},
		#{cardId},
		#{plusMins},
		#{memo},
		now(),
		now())
	</insert>

	<update id="update" parameterType="com.platform.entity.UserIntergralLogVo">
		update cnn_intergral_log
		<set>
			<if test="learnTypeId != null">`learn_type_id` = #{learnTypeId}, </if>
			<if test="userid != null">`userid` = #{userid}, </if>
			<if test="username != null">`username` = #{username}, </if>
			<if test="nickname != null">`nickname` = #{nickname}, </if>
			<if test="points != null">`points` = #{points}, </if>
			<if test="nowPoints != null">`nowPoints` = #{nowPoints}, </if>
			<if test="cardId != null">`card_id` = #{cardId}, </if>
			<if test="plusMins != null">`plus_mins` = #{plusMins}, </if>
			<if test="memo != null">`memo` = #{memo}, </if>
			<if test="updateTime != null">`update_time` = now()</if>
		</set>
		where id = #{id}
	</update>

	<delete id="delete">
		delete from cnn_intergral_log where id = #{value}
	</delete>

	<delete id="deleteBatch">
		delete from cnn_intergral_log where id in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>